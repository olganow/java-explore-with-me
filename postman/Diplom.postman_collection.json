{
	"info": {
		"_postman_id": "da58afb1-2aa9-4573-ba66-92e99efa2a31",
		"name": "Diplom",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "26991858"
	},
	"item": [
		{
			"name": "Stat service API",
			"item": [
				{
					"name": "Hit 1 create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit 2 create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/2\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2022-09-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with null app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": null,\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with null uri",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": null,\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with null ip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": null,\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with null timestamp Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with null bad timestamp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409/500\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([409, 500]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2033-07-06 11:00:65\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with empty uri",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with empty ip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with empty app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2023-07-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Hit create fail with empty timestamp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:9090/hit"
					},
					"response": []
				},
				{
					"name": "Get stat 1 result false",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test search stat response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);",
									"});",
									"",
									"pm.test(\"Test user 'app' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('app');",
									"    pm.expect(jsonData[0].app, '\"app\" must be \"ewm-main-service\"').to.eql('ewm-main-service');",
									"});",
									"",
									"pm.test(\"Test user 'uri' field\", function () {",
									"    var jsonData = pm.response.json();;",
									"    pm.expect(jsonData[0]).to.have.property('uri');",
									"    pm.expect(jsonData[0].uri, '\"uri\" must be \"/events/1\"').to.eql('/events/1');",
									"});",
									"",
									"pm.test(\"Test user 'hits' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('hits');",
									"    pm.expect(jsonData[0].hits).to.eql(1);",
									"      ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9090/stats?start=2023-01-01%2001%3A02%3A33&end=2023-09-01%2001%3A02%3A33&unique=false",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-01-01%2001%3A02%3A33"
								},
								{
									"key": "end",
									"value": "2023-09-01%2001%3A02%3A33"
								},
								{
									"key": "unique",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stat 2 results false",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test search stat response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length, 'List length must be 2').to.eql(2);",
									"});",
									"pm.test(\"Check fields of the first object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('app');",
									"    pm.expect(jsonData[0].app, '\"app\" must be \"ewm-main-service\"').to.eql('ewm-main-service');",
									"    pm.expect(jsonData[0]).to.have.property('uri');",
									"    pm.expect(jsonData[0].uri, '\"uri\" must be \"/events/1\"').to.eql('/events/1');",
									"    pm.expect(jsonData[0]).to.have.property('hits');",
									"    pm.expect(jsonData[0].hits).to.eql(1);",
									"});",
									"",
									"pm.test(\"Check fields of the first object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[1]).to.have.property('app');",
									"    pm.expect(jsonData[1].app, '\"app\" must be \"ewm-main-service\"').to.eql('ewm-main-service');",
									"    pm.expect(jsonData[1]).to.have.property('uri');",
									"    pm.expect(jsonData[1].uri, '\"uri\" must be \"/events/2\"').to.eql('/events/2');",
									"    pm.expect(jsonData[1]).to.have.property('hits');",
									"    pm.expect(jsonData[1].hits).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9090/stats?start=2021-01-01%2001%3A02%3A33&end=2023-08-01%2001%3A02%3A33&unique=false",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-01-01%2001%3A02%3A33"
								},
								{
									"key": "end",
									"value": "2023-08-01%2001%3A02%3A33"
								},
								{
									"key": "unique",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stat 1 result true",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test search stat response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);",
									"});",
									"",
									"pm.test(\"Test user 'app' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('app');",
									"    pm.expect(jsonData[0].app, '\"app\" must be \"ewm-main-service\"').to.eql('ewm-main-service');",
									"});",
									"",
									"pm.test(\"Test user 'uri' field\", function () {",
									"    var jsonData = pm.response.json();;",
									"    pm.expect(jsonData[0]).to.have.property('uri');",
									"    pm.expect(jsonData[0].uri, '\"uri\" must be \"/events/1\"').to.eql('/events/1');",
									"});",
									"",
									"pm.test(\"Test user 'hits' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('hits');",
									"    pm.expect(jsonData[0].hits).to.eql(1);",
									"      ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9090/stats?start=2023-01-01%2001%3A02%3A33&end=2023-09-01%2001%3A02%3A33&unique=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-01-01%2001%3A02%3A33"
								},
								{
									"key": "end",
									"value": "2023-09-01%2001%3A02%3A33"
								},
								{
									"key": "unique",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stat 1 result fail start after end",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Test validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('error');",
									"    pm.expect(jsonData.error).to.eql('Validation Error');",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9090/stats?start=2023-10-01%2001%3A02%3A33&end=2023-09-01%2001%3A02%3A33&unique=false",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-10-01%2001%3A02%3A33"
								},
								{
									"key": "end",
									"value": "2023-09-01%2001%3A02%3A33"
								},
								{
									"key": "unique",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}